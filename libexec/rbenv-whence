#!/usr/bin/env bash
# Summary: List all Ruby versions that contain the given executable
# Usage: rbenv whence [--path] <command>

set -e
[ -n "$RBENV_DEBUG" ] && set -x

# Provide rbenv completions
if [ "$1" = "--complete" ]; then
  echo --path
  exec rbenv-shims --short
fi

if [ "$1" = "--path" ]; then
  print_paths="1"
  shift
else
  print_paths=""
fi

whence() {
  local command="$1"
  rbenv-versions --bare | while read -r version; do
    path="$(rbenv-prefix "$version")/bin/${command}"
    if [ -x "$path" ]; then
      [ "$print_paths" ] && echo "$path" || echo "$version"
    else
      gem="$(rbenv-prefix "$version")/bin/gem"
      ruby="$(rbenv-prefix "$version")/bin/ruby"
      if [ -x "$gem" ]; then
        OLDIFS="$IFS"
        IFS=$'\n' binpaths=(`"$ruby" -e \
          'puts (Gem.path.map(&Gem.method(:bindir)) - [Gem.default_bindir]).join("\n")' 2>/dev/null || true`)
        IFS="$OLDIFS"
        for binpath in "${binpaths[@]}"; do
          path="${binpath}/${command}"
          if [ -x "$path" ]; then
            [ "$print_paths" ] && echo "$path" || echo "$version"
          fi
        done
      fi
    fi
  done
}

RBENV_COMMAND="$1"
if [ -z "$RBENV_COMMAND" ]; then
  rbenv-help --usage whence >&2
  exit 1
fi

result="$(whence "$RBENV_COMMAND")"
[ -n "$result" ] && echo "$result"
